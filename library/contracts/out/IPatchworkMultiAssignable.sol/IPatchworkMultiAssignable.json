{"abi":[{"type":"function","name":"allowAssignment","inputs":[{"name":"ourTokenId","type":"uint256","internalType":"uint256"},{"name":"target","type":"address","internalType":"address"},{"name":"targetTokenId","type":"uint256","internalType":"uint256"},{"name":"targetOwner","type":"address","internalType":"address"},{"name":"by","type":"address","internalType":"address"},{"name":"scopeName","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"assign","inputs":[{"name":"ourTokenId","type":"uint256","internalType":"uint256"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getAssignmentCount","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getAssignments","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"offset","type":"uint256","internalType":"uint256"},{"name":"count","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"tuple[]","internalType":"struct IPatchworkAssignable.Assignment[]","components":[{"name":"tokenAddr","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getScopeName","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"isAssignedTo","inputs":[{"name":"ourTokenId","type":"uint256","internalType":"uint256"},{"name":"target","type":"address","internalType":"address"},{"name":"targetTokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"unassign","inputs":[{"name":"ourTokenId","type":"uint256","internalType":"uint256"},{"name":"target","type":"address","internalType":"address"},{"name":"targetTokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"allowAssignment(uint256,address,uint256,address,address,string)":"38c11cd0","assign(uint256,address,uint256)":"47d83507","getAssignmentCount(uint256)":"768036c7","getAssignments(uint256,uint256,uint256)":"bacb7750","getScopeName()":"f44c3bf7","isAssignedTo(uint256,address,uint256)":"1beeacd0","unassign(uint256,address,uint256)":"af028f46"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ourTokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"targetTokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"targetOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"scopeName\",\"type\":\"string\"}],\"name\":\"allowAssignment\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ourTokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"assign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getAssignmentCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"getAssignments\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct IPatchworkAssignable.Assignment[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getScopeName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ourTokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"targetTokenId\",\"type\":\"uint256\"}],\"name\":\"isAssignedTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ourTokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"targetTokenId\",\"type\":\"uint256\"}],\"name\":\"unassign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Runic Labs, Inc\",\"kind\":\"dev\",\"methods\":{\"allowAssignment(uint256,address,uint256,address,address,string)\":{\"params\":{\"by\":\"the account invoking the assignment to Patchwork Protocol\",\"ourTokenId\":\"the tokenID to assign\",\"scopeName\":\"the scope name of the contract to assign to\",\"target\":\"the address of the target\",\"targetOwner\":\"the ownerOf of the target\",\"targetTokenId\":\"the tokenID of the target\"}},\"assign(uint256,address,uint256)\":{\"params\":{\"ourTokenId\":\"ID of our token\",\"to\":\"Address to assign to\",\"tokenId\":\"ID of the token to assign\"}},\"getAssignmentCount(uint256)\":{\"params\":{\"tokenId\":\"tokenId of our fragment\"}},\"getAssignments(uint256,uint256,uint256)\":{\"params\":{\"count\":\"the maximum numer of entries to return\",\"offset\":\"the page offset\",\"tokenId\":\"tokenId of our fragment\"}},\"getScopeName()\":{\"returns\":{\"_0\":\"string the name of the scope\"}},\"isAssignedTo(uint256,address,uint256)\":{\"params\":{\"ourTokenId\":\"the tokenId of the fragment\",\"target\":\"the address of the target\",\"targetTokenId\":\"the tokenId of the target\"}},\"unassign(uint256,address,uint256)\":{\"params\":{\"ourTokenId\":\"tokenId of our fragment\"}}},\"title\":\"Patchwork Protocol Assignable NFT Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowAssignment(uint256,address,uint256,address,address,string)\":{\"notice\":\"Checks permissions for assignment\"},\"assign(uint256,address,uint256)\":{\"notice\":\"Assigns a token to another\"},\"getAssignmentCount(uint256)\":{\"notice\":\"Counts the number of unique assignments this token has\"},\"getAssignments(uint256,uint256,uint256)\":{\"notice\":\"Gets assignments for a fragment\"},\"getScopeName()\":{\"notice\":\"Get the scope this NFT claims to belong to\"},\"isAssignedTo(uint256,address,uint256)\":{\"notice\":\"Checks if this fragment is assigned to a target\"},\"unassign(uint256,address,uint256)\":{\"notice\":\"Unassigns a token\"}},\"notice\":\"Interface for contracts supporting Patchwork assignment\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/patchwork/src/interfaces/IPatchworkMultiAssignable.sol\":\"IPatchworkMultiAssignable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@patchwork/=lib/patchwork/src/\",\":ds-test/=lib/solidity-stringutils/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":lib/=lib/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":patchwork/=lib/patchwork/\",\":solidity-stringutils/=lib/solidity-stringutils/\"]},\"sources\":{\"lib/patchwork/src/interfaces/IPatchworkAssignable.sol\":{\"keccak256\":\"0xe57f85596e6dd0ed90714f387fdb1da005e942b67511b4b0c024c11b8f6b7ee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://358cbd0d536618f5260252182591deefc994989fc5faaa198b844369363dc2d4\",\"dweb:/ipfs/QmekNLXJE6zw45q6gsNr4CzwqhXYvWJCLeeLtNRhr9yCD1\"]},\"lib/patchwork/src/interfaces/IPatchworkMultiAssignable.sol\":{\"keccak256\":\"0x1b663787f00b879a29dfee66f291ea260de88514df2fc8b2d6e2e560c342d042\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e848afd50b3d848c1653be5b90b7e58af7a6c1365e2943b3d98bbf949d0d535\",\"dweb:/ipfs/Qmav5RugQ9VavxNvpSWXKpkrZJj9jtQgTsfizuh8vQtztP\"]},\"lib/patchwork/src/interfaces/IPatchworkScoped.sol\":{\"keccak256\":\"0xac53e534b7dd1208948ccab869a71cf3840834a2a7abea8420f15708f7d1d842\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3ec2a54430f5c5483e8ebe99d40d99e251d86691543c129675298078c083741\",\"dweb:/ipfs/Qma4eX2Vq5W6C2ovkfyAKRVrhXTWM42xzBeB5ZKYUV3bTB\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"ourTokenId","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"targetTokenId","type":"uint256"},{"internalType":"address","name":"targetOwner","type":"address"},{"internalType":"address","name":"by","type":"address"},{"internalType":"string","name":"scopeName","type":"string"}],"stateMutability":"view","type":"function","name":"allowAssignment","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"ourTokenId","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"assign"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getAssignmentCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"offset","type":"uint256"},{"internalType":"uint256","name":"count","type":"uint256"}],"stateMutability":"view","type":"function","name":"getAssignments","outputs":[{"internalType":"struct IPatchworkAssignable.Assignment[]","name":"","type":"tuple[]","components":[{"internalType":"address","name":"tokenAddr","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getScopeName","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"ourTokenId","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"targetTokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"isAssignedTo","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"ourTokenId","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"targetTokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"unassign"}],"devdoc":{"kind":"dev","methods":{"allowAssignment(uint256,address,uint256,address,address,string)":{"params":{"by":"the account invoking the assignment to Patchwork Protocol","ourTokenId":"the tokenID to assign","scopeName":"the scope name of the contract to assign to","target":"the address of the target","targetOwner":"the ownerOf of the target","targetTokenId":"the tokenID of the target"}},"assign(uint256,address,uint256)":{"params":{"ourTokenId":"ID of our token","to":"Address to assign to","tokenId":"ID of the token to assign"}},"getAssignmentCount(uint256)":{"params":{"tokenId":"tokenId of our fragment"}},"getAssignments(uint256,uint256,uint256)":{"params":{"count":"the maximum numer of entries to return","offset":"the page offset","tokenId":"tokenId of our fragment"}},"getScopeName()":{"returns":{"_0":"string the name of the scope"}},"isAssignedTo(uint256,address,uint256)":{"params":{"ourTokenId":"the tokenId of the fragment","target":"the address of the target","targetTokenId":"the tokenId of the target"}},"unassign(uint256,address,uint256)":{"params":{"ourTokenId":"tokenId of our fragment"}}},"version":1},"userdoc":{"kind":"user","methods":{"allowAssignment(uint256,address,uint256,address,address,string)":{"notice":"Checks permissions for assignment"},"assign(uint256,address,uint256)":{"notice":"Assigns a token to another"},"getAssignmentCount(uint256)":{"notice":"Counts the number of unique assignments this token has"},"getAssignments(uint256,uint256,uint256)":{"notice":"Gets assignments for a fragment"},"getScopeName()":{"notice":"Get the scope this NFT claims to belong to"},"isAssignedTo(uint256,address,uint256)":{"notice":"Checks if this fragment is assigned to a target"},"unassign(uint256,address,uint256)":{"notice":"Unassigns a token"}},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/openzeppelin-contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@patchwork/=lib/patchwork/src/","ds-test/=lib/solidity-stringutils/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","lib/=lib/","openzeppelin-contracts/=lib/openzeppelin-contracts/","patchwork/=lib/patchwork/","solidity-stringutils/=lib/solidity-stringutils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/patchwork/src/interfaces/IPatchworkMultiAssignable.sol":"IPatchworkMultiAssignable"},"evmVersion":"shanghai","libraries":{}},"sources":{"lib/patchwork/src/interfaces/IPatchworkAssignable.sol":{"keccak256":"0xe57f85596e6dd0ed90714f387fdb1da005e942b67511b4b0c024c11b8f6b7ee3","urls":["bzz-raw://358cbd0d536618f5260252182591deefc994989fc5faaa198b844369363dc2d4","dweb:/ipfs/QmekNLXJE6zw45q6gsNr4CzwqhXYvWJCLeeLtNRhr9yCD1"],"license":"MIT"},"lib/patchwork/src/interfaces/IPatchworkMultiAssignable.sol":{"keccak256":"0x1b663787f00b879a29dfee66f291ea260de88514df2fc8b2d6e2e560c342d042","urls":["bzz-raw://5e848afd50b3d848c1653be5b90b7e58af7a6c1365e2943b3d98bbf949d0d535","dweb:/ipfs/Qmav5RugQ9VavxNvpSWXKpkrZJj9jtQgTsfizuh8vQtztP"],"license":"MIT"},"lib/patchwork/src/interfaces/IPatchworkScoped.sol":{"keccak256":"0xac53e534b7dd1208948ccab869a71cf3840834a2a7abea8420f15708f7d1d842","urls":["bzz-raw://e3ec2a54430f5c5483e8ebe99d40d99e251d86691543c129675298078c083741","dweb:/ipfs/Qma4eX2Vq5W6C2ovkfyAKRVrhXTWM42xzBeB5ZKYUV3bTB"],"license":"MIT"}},"version":1},"id":46}