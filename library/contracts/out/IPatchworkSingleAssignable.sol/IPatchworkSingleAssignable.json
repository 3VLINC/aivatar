{"abi":[{"type":"function","name":"allowAssignment","inputs":[{"name":"ourTokenId","type":"uint256","internalType":"uint256"},{"name":"target","type":"address","internalType":"address"},{"name":"targetTokenId","type":"uint256","internalType":"uint256"},{"name":"targetOwner","type":"address","internalType":"address"},{"name":"by","type":"address","internalType":"address"},{"name":"scopeName","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"assign","inputs":[{"name":"ourTokenId","type":"uint256","internalType":"uint256"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getAssignedTo","inputs":[{"name":"ourTokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getScopeName","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"onAssignedTransfer","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unassign","inputs":[{"name":"ourTokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unassignedOwnerOf","inputs":[{"name":"ourTokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"updateOwnership","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"allowAssignment(uint256,address,uint256,address,address,string)":"38c11cd0","assign(uint256,address,uint256)":"47d83507","getAssignedTo(uint256)":"407b8800","getScopeName()":"f44c3bf7","onAssignedTransfer(address,address,uint256)":"0d44bc2a","unassign(uint256)":"1be38c08","unassignedOwnerOf(uint256)":"cfacdd79","updateOwnership(uint256)":"e7314931"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ourTokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"targetTokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"targetOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"scopeName\",\"type\":\"string\"}],\"name\":\"allowAssignment\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ourTokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"assign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ourTokenId\",\"type\":\"uint256\"}],\"name\":\"getAssignedTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getScopeName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"onAssignedTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ourTokenId\",\"type\":\"uint256\"}],\"name\":\"unassign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ourTokenId\",\"type\":\"uint256\"}],\"name\":\"unassignedOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"updateOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Runic Labs, Inc\",\"kind\":\"dev\",\"methods\":{\"allowAssignment(uint256,address,uint256,address,address,string)\":{\"params\":{\"by\":\"the account invoking the assignment to Patchwork Protocol\",\"ourTokenId\":\"the tokenID to assign\",\"scopeName\":\"the scope name of the contract to assign to\",\"target\":\"the address of the target\",\"targetOwner\":\"the ownerOf of the target\",\"targetTokenId\":\"the tokenID of the target\"}},\"assign(uint256,address,uint256)\":{\"params\":{\"ourTokenId\":\"ID of our token\",\"to\":\"Address to assign to\",\"tokenId\":\"ID of the token to assign\"}},\"getAssignedTo(uint256)\":{\"params\":{\"ourTokenId\":\"ID of our token\"},\"returns\":{\"_0\":\"address the address this is assigned to\",\"_1\":\"uint256 the tokenId this is assigned to\"}},\"getScopeName()\":{\"returns\":{\"_0\":\"string the name of the scope\"}},\"onAssignedTransfer(address,address,uint256)\":{\"params\":{\"from\":\"Sender address\",\"to\":\"Recipient address\",\"tokenId\":\"ID of the token\"}},\"unassign(uint256)\":{\"params\":{\"ourTokenId\":\"ID of our token\"}},\"unassignedOwnerOf(uint256)\":{\"params\":{\"ourTokenId\":\"ID of our token\"},\"returns\":{\"_0\":\"address address of the owner\"}},\"updateOwnership(uint256)\":{\"params\":{\"tokenId\":\"ID of the token\"}}},\"title\":\"Patchwork Protocol Assignable Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowAssignment(uint256,address,uint256,address,address,string)\":{\"notice\":\"Checks permissions for assignment\"},\"assign(uint256,address,uint256)\":{\"notice\":\"Assigns a token to another\"},\"getAssignedTo(uint256)\":{\"notice\":\"Returns the address and token ID that our token is assigned to\"},\"getScopeName()\":{\"notice\":\"Get the scope this NFT claims to belong to\"},\"onAssignedTransfer(address,address,uint256)\":{\"notice\":\"Sends events for a token when the assigned-to token has been transferred\"},\"unassign(uint256)\":{\"notice\":\"Unassigns a token\"},\"unassignedOwnerOf(uint256)\":{\"notice\":\"Returns the underlying stored owner of a token ignoring current assignment\"},\"updateOwnership(uint256)\":{\"notice\":\"Updates the real underlying ownership of a token in storage (if different from current)\"}},\"notice\":\"Interface for contracts supporting Patchwork assignment\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/patchwork/src/interfaces/IPatchworkSingleAssignable.sol\":\"IPatchworkSingleAssignable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@patchwork/=lib/patchwork/src/\",\":ds-test/=lib/solidity-stringutils/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":lib/=lib/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":patchwork/=lib/patchwork/\",\":solidity-stringutils/=lib/solidity-stringutils/\"]},\"sources\":{\"lib/patchwork/src/interfaces/IPatchworkAssignable.sol\":{\"keccak256\":\"0xe57f85596e6dd0ed90714f387fdb1da005e942b67511b4b0c024c11b8f6b7ee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://358cbd0d536618f5260252182591deefc994989fc5faaa198b844369363dc2d4\",\"dweb:/ipfs/QmekNLXJE6zw45q6gsNr4CzwqhXYvWJCLeeLtNRhr9yCD1\"]},\"lib/patchwork/src/interfaces/IPatchworkScoped.sol\":{\"keccak256\":\"0xac53e534b7dd1208948ccab869a71cf3840834a2a7abea8420f15708f7d1d842\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3ec2a54430f5c5483e8ebe99d40d99e251d86691543c129675298078c083741\",\"dweb:/ipfs/Qma4eX2Vq5W6C2ovkfyAKRVrhXTWM42xzBeB5ZKYUV3bTB\"]},\"lib/patchwork/src/interfaces/IPatchworkSingleAssignable.sol\":{\"keccak256\":\"0x36675f30710149b937934ecdd22bf2d6b1166986789a601408a1bff903ae7ebf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3d523a6375cc3967a971bf6e682cebf8c0b5e0c671f43b78b15f6811fffd8de\",\"dweb:/ipfs/QmfUT2zoTsa2v3943e6pVveQ1g4Nmq4nueLpmvdFerGVXa\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"ourTokenId","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"targetTokenId","type":"uint256"},{"internalType":"address","name":"targetOwner","type":"address"},{"internalType":"address","name":"by","type":"address"},{"internalType":"string","name":"scopeName","type":"string"}],"stateMutability":"view","type":"function","name":"allowAssignment","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"ourTokenId","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"assign"},{"inputs":[{"internalType":"uint256","name":"ourTokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getAssignedTo","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getScopeName","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"onAssignedTransfer"},{"inputs":[{"internalType":"uint256","name":"ourTokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"unassign"},{"inputs":[{"internalType":"uint256","name":"ourTokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"unassignedOwnerOf","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"updateOwnership"}],"devdoc":{"kind":"dev","methods":{"allowAssignment(uint256,address,uint256,address,address,string)":{"params":{"by":"the account invoking the assignment to Patchwork Protocol","ourTokenId":"the tokenID to assign","scopeName":"the scope name of the contract to assign to","target":"the address of the target","targetOwner":"the ownerOf of the target","targetTokenId":"the tokenID of the target"}},"assign(uint256,address,uint256)":{"params":{"ourTokenId":"ID of our token","to":"Address to assign to","tokenId":"ID of the token to assign"}},"getAssignedTo(uint256)":{"params":{"ourTokenId":"ID of our token"},"returns":{"_0":"address the address this is assigned to","_1":"uint256 the tokenId this is assigned to"}},"getScopeName()":{"returns":{"_0":"string the name of the scope"}},"onAssignedTransfer(address,address,uint256)":{"params":{"from":"Sender address","to":"Recipient address","tokenId":"ID of the token"}},"unassign(uint256)":{"params":{"ourTokenId":"ID of our token"}},"unassignedOwnerOf(uint256)":{"params":{"ourTokenId":"ID of our token"},"returns":{"_0":"address address of the owner"}},"updateOwnership(uint256)":{"params":{"tokenId":"ID of the token"}}},"version":1},"userdoc":{"kind":"user","methods":{"allowAssignment(uint256,address,uint256,address,address,string)":{"notice":"Checks permissions for assignment"},"assign(uint256,address,uint256)":{"notice":"Assigns a token to another"},"getAssignedTo(uint256)":{"notice":"Returns the address and token ID that our token is assigned to"},"getScopeName()":{"notice":"Get the scope this NFT claims to belong to"},"onAssignedTransfer(address,address,uint256)":{"notice":"Sends events for a token when the assigned-to token has been transferred"},"unassign(uint256)":{"notice":"Unassigns a token"},"unassignedOwnerOf(uint256)":{"notice":"Returns the underlying stored owner of a token ignoring current assignment"},"updateOwnership(uint256)":{"notice":"Updates the real underlying ownership of a token in storage (if different from current)"}},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/openzeppelin-contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@patchwork/=lib/patchwork/src/","ds-test/=lib/solidity-stringutils/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","lib/=lib/","openzeppelin-contracts/=lib/openzeppelin-contracts/","patchwork/=lib/patchwork/","solidity-stringutils/=lib/solidity-stringutils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/patchwork/src/interfaces/IPatchworkSingleAssignable.sol":"IPatchworkSingleAssignable"},"evmVersion":"shanghai","libraries":{}},"sources":{"lib/patchwork/src/interfaces/IPatchworkAssignable.sol":{"keccak256":"0xe57f85596e6dd0ed90714f387fdb1da005e942b67511b4b0c024c11b8f6b7ee3","urls":["bzz-raw://358cbd0d536618f5260252182591deefc994989fc5faaa198b844369363dc2d4","dweb:/ipfs/QmekNLXJE6zw45q6gsNr4CzwqhXYvWJCLeeLtNRhr9yCD1"],"license":"MIT"},"lib/patchwork/src/interfaces/IPatchworkScoped.sol":{"keccak256":"0xac53e534b7dd1208948ccab869a71cf3840834a2a7abea8420f15708f7d1d842","urls":["bzz-raw://e3ec2a54430f5c5483e8ebe99d40d99e251d86691543c129675298078c083741","dweb:/ipfs/Qma4eX2Vq5W6C2ovkfyAKRVrhXTWM42xzBeB5ZKYUV3bTB"],"license":"MIT"},"lib/patchwork/src/interfaces/IPatchworkSingleAssignable.sol":{"keccak256":"0x36675f30710149b937934ecdd22bf2d6b1166986789a601408a1bff903ae7ebf","urls":["bzz-raw://f3d523a6375cc3967a971bf6e682cebf8c0b5e0c671f43b78b15f6811fffd8de","dweb:/ipfs/QmfUT2zoTsa2v3943e6pVveQ1g4Nmq4nueLpmvdFerGVXa"],"license":"MIT"}},"version":1},"id":50}