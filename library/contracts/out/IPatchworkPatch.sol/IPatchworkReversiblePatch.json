{"abi":[{"type":"function","name":"getScopeName","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getTokenIdByTarget","inputs":[{"name":"target","type":"tuple","internalType":"struct IPatchworkPatch.PatchTarget","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"mintPatch","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"target","type":"tuple","internalType":"struct IPatchworkPatch.PatchTarget","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"stateMutability":"payable"},{"type":"function","name":"ownerOfPatch","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"updateOwnership","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getScopeName()":"f44c3bf7","getTokenIdByTarget((address,uint256))":"b1d8ac60","mintPatch(address,(address,uint256))":"20bbbe78","ownerOfPatch(uint256)":"739c50b1","updateOwnership(uint256)":"e7314931"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getScopeName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct IPatchworkPatch.PatchTarget\",\"name\":\"target\",\"type\":\"tuple\"}],\"name\":\"getTokenIdByTarget\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct IPatchworkPatch.PatchTarget\",\"name\":\"target\",\"type\":\"tuple\"}],\"name\":\"mintPatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOfPatch\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"updateOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Runic Labs, Inc\",\"kind\":\"dev\",\"methods\":{\"getScopeName()\":{\"returns\":{\"_0\":\"string the name of the scope\"}},\"getTokenIdByTarget((address,uint256))\":{\"details\":\"Requires reverse storage enabled\",\"params\":{\"target\":\"Patch to target of patch\"},\"returns\":{\"tokenId\":\"token ID of the patch\"}},\"mintPatch(address,(address,uint256))\":{\"params\":{\"owner\":\"Address of the owner of the token\",\"target\":\"path to target of patch\"},\"returns\":{\"tokenId\":\"ID of the newly minted token\"}},\"ownerOfPatch(uint256)\":{\"params\":{\"tokenId\":\"ID of the token\"},\"returns\":{\"_0\":\"address Address of the owner\"}},\"updateOwnership(uint256)\":{\"params\":{\"tokenId\":\"ID of the token\"}}},\"title\":\"Patchwork Protocol Reversible Patch Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getScopeName()\":{\"notice\":\"Get the scope this NFT claims to belong to\"},\"getTokenIdByTarget((address,uint256))\":{\"notice\":\"Returns the token ID (if it exists) for an NFT that may have been patched\"},\"mintPatch(address,(address,uint256))\":{\"notice\":\"Creates a new token for the owner, representing a patch\"},\"ownerOfPatch(uint256)\":{\"notice\":\"Returns the underlying stored owner of a token ignoring real patched NFT ownership\"},\"updateOwnership(uint256)\":{\"notice\":\"Updates the real underlying ownership of a token in storage (if different from current)\"}},\"notice\":\"Interface for contracts supporting Patchwork patch standard with reverse lookup\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/patchwork/src/interfaces/IPatchworkPatch.sol\":\"IPatchworkReversiblePatch\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@patchwork/=lib/patchwork/src/\",\":ds-test/=lib/solidity-stringutils/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":lib/=lib/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":patchwork/=lib/patchwork/\",\":solidity-stringutils/=lib/solidity-stringutils/\"]},\"sources\":{\"lib/patchwork/src/interfaces/IPatchworkPatch.sol\":{\"keccak256\":\"0x95a72e030a8e71bff82fef9dd060309e5abbc3f8f49744c5e210935bacf9afeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86b597bcc133a16fbf301b4e4f262705329b674537574defb9c89fda3111f14f\",\"dweb:/ipfs/QmerJ8FtR2PGkj21NvM8EPPBcbQWrNzrg93LCuFZG8M9Hm\"]},\"lib/patchwork/src/interfaces/IPatchworkScoped.sol\":{\"keccak256\":\"0xac53e534b7dd1208948ccab869a71cf3840834a2a7abea8420f15708f7d1d842\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3ec2a54430f5c5483e8ebe99d40d99e251d86691543c129675298078c083741\",\"dweb:/ipfs/Qma4eX2Vq5W6C2ovkfyAKRVrhXTWM42xzBeB5ZKYUV3bTB\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"view","type":"function","name":"getScopeName","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"struct IPatchworkPatch.PatchTarget","name":"target","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}]}],"stateMutability":"view","type":"function","name":"getTokenIdByTarget","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"struct IPatchworkPatch.PatchTarget","name":"target","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}]}],"stateMutability":"payable","type":"function","name":"mintPatch","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"ownerOfPatch","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"updateOwnership"}],"devdoc":{"kind":"dev","methods":{"getScopeName()":{"returns":{"_0":"string the name of the scope"}},"getTokenIdByTarget((address,uint256))":{"details":"Requires reverse storage enabled","params":{"target":"Patch to target of patch"},"returns":{"tokenId":"token ID of the patch"}},"mintPatch(address,(address,uint256))":{"params":{"owner":"Address of the owner of the token","target":"path to target of patch"},"returns":{"tokenId":"ID of the newly minted token"}},"ownerOfPatch(uint256)":{"params":{"tokenId":"ID of the token"},"returns":{"_0":"address Address of the owner"}},"updateOwnership(uint256)":{"params":{"tokenId":"ID of the token"}}},"version":1},"userdoc":{"kind":"user","methods":{"getScopeName()":{"notice":"Get the scope this NFT claims to belong to"},"getTokenIdByTarget((address,uint256))":{"notice":"Returns the token ID (if it exists) for an NFT that may have been patched"},"mintPatch(address,(address,uint256))":{"notice":"Creates a new token for the owner, representing a patch"},"ownerOfPatch(uint256)":{"notice":"Returns the underlying stored owner of a token ignoring real patched NFT ownership"},"updateOwnership(uint256)":{"notice":"Updates the real underlying ownership of a token in storage (if different from current)"}},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/openzeppelin-contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@patchwork/=lib/patchwork/src/","ds-test/=lib/solidity-stringutils/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","lib/=lib/","openzeppelin-contracts/=lib/openzeppelin-contracts/","patchwork/=lib/patchwork/","solidity-stringutils/=lib/solidity-stringutils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/patchwork/src/interfaces/IPatchworkPatch.sol":"IPatchworkReversiblePatch"},"evmVersion":"shanghai","libraries":{}},"sources":{"lib/patchwork/src/interfaces/IPatchworkPatch.sol":{"keccak256":"0x95a72e030a8e71bff82fef9dd060309e5abbc3f8f49744c5e210935bacf9afeb","urls":["bzz-raw://86b597bcc133a16fbf301b4e4f262705329b674537574defb9c89fda3111f14f","dweb:/ipfs/QmerJ8FtR2PGkj21NvM8EPPBcbQWrNzrg93LCuFZG8M9Hm"],"license":"MIT"},"lib/patchwork/src/interfaces/IPatchworkScoped.sol":{"keccak256":"0xac53e534b7dd1208948ccab869a71cf3840834a2a7abea8420f15708f7d1d842","urls":["bzz-raw://e3ec2a54430f5c5483e8ebe99d40d99e251d86691543c129675298078c083741","dweb:/ipfs/Qma4eX2Vq5W6C2ovkfyAKRVrhXTWM42xzBeB5ZKYUV3bTB"],"license":"MIT"}},"version":1},"id":47}